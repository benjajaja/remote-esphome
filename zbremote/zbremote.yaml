substitutions:
  device_name: zbremote

external_components:
  - source: github://luar123/zigbee_esphome
    components: [zigbee]

esphome:
  name: ${device_name}-esphome
  on_boot:
    priority: -10
    then:
      - repeat:
          count: 3
          then:
            - light.turn_on: light_1
            - delay: 200ms
            - light.turn_off: light_1
            - delay: 200ms
      - repeat:
          count: 2
          then:
            - light.turn_on: light_1
            - delay: 300ms
            - light.turn_off: light_1
            - delay: 300ms
      - light.turn_on: light_1
      - delay: 1000ms
      - light.turn_off: light_1

esp32:
  board: esp32-c6-devkitc-1
  partitions: partitions_zb.csv
  framework:
    type: esp-idf

logger:
  hardware_uart: USB_SERIAL_JTAG

sensor:
  - platform: internal_temperature
    name: "Internal Temperature"
    id: "temp"
    filters:
      - delta: 0.1

light:
  - platform: status_led
    id: light_1
    name: "XIAO Status LED"
    pin:
      number: GPIO15
      inverted: true

zigbee:
  id: "zb"
  router: true
  endpoints:
    - num: 1
      device_type: ON_OFF_OUTPUT
      clusters:
        - id: ON_OFF
          attributes:
            - attribute_id: 0x0000
              type: bool
              on_value:
                then:
                  - light.turn_on: light_1
                  - script.execute:
                      id: transmit_house_code
                      house: 13785
                      code: !lambda "return x ? 4 : 1;"
                  - delay: 100ms
                  - light.turn_off: light_1
                  - repeat:
                      count: 4
                      then:
                        - light.turn_on: light_1
                        - delay: 100ms
                        - light.turn_off: light_1
                        - delay: 100ms

    - num: 2
      device_type: ON_OFF_OUTPUT
      clusters:
        - id: ON_OFF
          attributes:
            - attribute_id: 0x0000
              type: bool
              on_value:
                then:
                  - light.turn_on: light_1
                  - script.execute:
                      id: transmit_house_code
                      house: 63258
                      code: !lambda "return x ? 4 : 1;"
                  - delay: 100ms
                  - light.turn_off: light_1
                  - repeat:
                      count: 4
                      then:
                        - light.turn_on: light_1
                        - delay: 100ms
                        - light.turn_off: light_1
                        - delay: 100ms

    - num: 3
      device_type: ON_OFF_OUTPUT
      clusters:
        - id: ON_OFF
          attributes:
            - attribute_id: 0x0000
              type: bool
              on_value:
                then:
                  - light.turn_on: light_1
                  - script.execute:
                      id: transmit_house_code
                      house: 63258
                      code: !lambda "return x ? 10 : 8;"
                  - delay: 100ms
                  - light.turn_off: light_1
                  - repeat:
                      count: 4
                      then:
                        - light.turn_on: light_1
                        - delay: 100ms
                        - light.turn_off: light_1
                        - delay: 100ms

  on_join:
    then:
      - logger.log: "Joined network"
      - repeat:
          count: 10
          then:
            - light.turn_on: light_1
            - delay: 100ms
            - light.turn_off: light_1
            - delay: 100ms
      - light.turn_on: light_1
      - delay: 1s
      - light.turn_off: light_1

remote_transmitter:
  pin: GPIO19
  carrier_duty_percent: 50%
  id: remote_tx

globals:
  - id: binary_code
    type: std::string
    initial_value: '""'

script:
  - id: transmit_house_code
    parameters:
      house: int
      code: int
    then:
      - lambda: |-
          // Use uint32_t to ensure we have enough bits
          uint32_t combined = ((uint32_t)house << 8) | (uint32_t)code;
          
          // Convert to 24-bit binary string
          std::string binary_str = "";
          for (int i = 23; i >= 0; i--) {
            if (combined & (1UL << i)) {
              binary_str += "1";
            } else {
              binary_str += "0";
            }
          }
          
          ESP_LOGD("house_code", "House: %d, Code: %d -> Combined: %lu -> Binary: %s", 
                   house, code, (unsigned long)combined, binary_str.c_str());
          
          id(binary_code) = binary_str;
      - remote_transmitter.transmit_rc_switch_raw:
          code: !lambda "return id(binary_code);"
          protocol:
            pulse_length: 400
            sync: [1, 31]
            zero: [1, 3]
            one: [3, 1]
          repeat:
            times: 5
            wait_time: 0s


# button:
  # - platform: template
    # name: "Bedroom 1 Light On"
    # id: ${device_name}_ceiling_fan_light_on
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 4
  # - platform: template
    # name: "Bedroom 1 Light Off"
    # id: ${device_name}_ceiling_fan_light_off
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 1
  # - platform: template
    # name: "Bedroom 1 Fan 1"
    # id: ${device_name}_ceiling_fan_1
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 10
  # - platform: template
    # name: "Bedroom 1 Fan 2"
    # id: ${device_name}_ceiling_fan_2
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 7
  # - platform: template
    # name: "FAN 3"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 5
  # - platform: template
    # name: "FAN 4"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 9
  # - platform: template
    # name: "FAN 4"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 9
  # - platform: template
    # name: "FAN 5"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 12
  # - platform: template
    # name: "FAN 6"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 11
  # - platform: template
    # name: "Bedroom 1 Fan Off"
    # id: ${device_name}_ceiling_fan_off
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 8
  # - platform: template
    # name: "Bedroom 1 Fan 2 Hours"
    # id: ${device_name}_ceiling_fan_2_hours
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 13785
          # code: 18
  # - platform: template
    # name: "Bedroom 2 Light On"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 63258
          # code: 4
  # - platform: template
    # name: "Bedroom 2 Light Off"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 63258
          # code: 1
  # - platform: template
    # name: "Bedroom 2 Fan Off"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 63258
          # code: 8
  # - platform: template
    # name: "Bedroom 2 Fan 1"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 63258
          # code: 10
  # - platform: template
    # name: "Bedroom 2 Fan 2"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 63258
          # code: 7
  # - platform: template
    # name: "Bedroom 2 Fan 3"
    # on_press:
      # - script.execute:
          # id: transmit_house_code
          # house: 63258
          # code: 5

